Nig
nog
rig
rod
r
r <- 4
print rapply
print r
r
r[0]
r[1]
r <- 3
knitr::opts_chunk$set(echo = TRUE)
library(tm)
install.packages(c("tm", "tidytext", "tidyverse", "DT"))
library(tm)
library(tidytext)
library(tidyverse)
library(DT)
urlfile<-'https://raw.githubusercontent.com/rit-public/HappyDB/master/happydb/data/cleaned_hm.csv'
hm_data <- read_csv(urlfile)
corpus <- VCorpus(VectorSource(hm_data$cleaned_hm))%>%
tm_map(content_transformer(tolower))%>%
tm_map(removePunctuation)%>%
tm_map(removeNumbers)%>%
tm_map(removeWords, character(0))%>%
tm_map(stripWhitespace)
stemmed <- tm_map(corpus, stemDocument) %>%
tidy() %>%
select(text)
dict <- tidy(corpus) %>%
select(text) %>%
unnest_tokens(dictionary, text)
data("stop_words")
word <- c("happy","ago","yesterday","lot","today","months","month",
"happier","happiest","last","week","past")
stop_words <- stop_words %>%
bind_rows(mutate(tibble(word), lexicon = "updated"))
completed <- stemmed %>%
mutate(id = row_number()) %>%
unnest_tokens(stems, text) %>%
bind_cols(dict) %>%
anti_join(stop_words, by = c("dictionary" = "word"))
completed <- completed %>%
group_by(stems) %>%
count(dictionary) %>%
mutate(word = dictionary[which.max(n)]) %>%
ungroup() %>%
select(stems, word) %>%
distinct() %>%
right_join(completed) %>%
select(-stems)
completed <- completed %>%
group_by(id) %>%
summarise(text = str_c(word, collapse = " ")) %>%
ungroup()
hm_data <- hm_data %>%
mutate(id = row_number()) %>%
inner_join(completed)
datatable(hm_data)
write_csv(hm_data, "../output/processed_moments.csv")
runApp(getwd())
install.packages("shiny")
shiny::runApp('Downloads/wk4-Shiny_tutorial')
runApp('Downloads/wk4-Shiny_tutorial')
runApp('Downloads/wk4-Shiny_tutorial')
shiny::runApp('Documents/GitHub/Spr2017-proj2-grp2/app')
install.packages(leaflet)
install.packages("leaflet")
runApp('Documents/GitHub/Spr2017-proj2-grp2/app')
runApp('Documents/GitHub/Spr2017-proj2-grp2/app')
runApp('Documents/GitHub/Spr2017-proj2-grp2/app')
runApp('Documents/GitHub/Spr2017-proj2-grp2/app')
runApp('Documents/GitHub/Spr2017-proj2-grp2/app')
shiny::runApp('Documents/GitHub/Spring2019-Proj2-grp11/app')
runApp('Documents/GitHub/Spring2019-Proj2-grp11/app')
runApp('Documents/GitHub/Spring2019-Proj2-grp11/app')
runApp('Documents/GitHub/Spring2019-Proj2-grp11/app')
?frame_data
?frame
runApp('Documents/GitHub/Spring2019-Proj2-grp11/app')
runApp('Documents/GitHub/Spring2019-Proj2-grp11/app')
runApp('Documents/GitHub/Spring2019-Proj2-grp11/app')
count_seperated.RData
runApp('Documents/GitHub/Spring2019-Proj2-grp11/app')
packages.used=c("rgeos", "sp", "rgdal",
"leaflet", "htmlwidgets", "shiny",
"ggplot2", "dplyr", "data.table","DT", "readr")
runApp('Documents/GitHub/Spring2019-Proj2-grp11/app')
install.packages("readr")
runApp('Documents/GitHub/Spring2019-Proj2-grp11/app')
runApp('Documents/GitHub/Spring2019-Proj2-grp11/app')
runApp('Documents/GitHub/Spring2019-Proj2-grp11/app')
runApp('Documents/GitHub/Spring2019-Proj2-grp11/app')
runApp('Documents/GitHub/Spring2019-Proj2-grp11/app')
runApp('Documents/GitHub/Spring2019-Proj2-grp11/app')
runApp('Documents/GitHub/Spring2019-Proj2-grp11/app')
runApp('Documents/GitHub/Spring2019-Proj2-grp11/app')
runApp('Documents/GitHub/Spring2019-Proj2-grp11/app')
runApp('Documents/GitHub/Spring2019-Proj2-grp11/app')
runApp('Documents/GitHub/Spring2019-Proj2-grp11/app')
runApp('Documents/GitHub/Spring2019-Proj2-grp11/app')
runApp('Documents/GitHub/Spring2019-Proj2-grp11/app')
runApp('Documents/GitHub/Spring2019-Proj2-grp11/app')
shiny::runApp('Documents/GitHub/Spring2019-Proj2-grp11/app')
runApp('Documents/GitHub/Spring2019-Proj2-grp11/app')
runApp('Documents/GitHub/Spring2019-Proj2-grp11/app')
getwd()
setwd("Documents/GitHub/Spring2019-Proj2-grp11/")
ls
getwd()
runApp('app')
runApp('app')
library(rgeos)
library(sp)
library(rgdal)
library(leaflet)
library(htmlwidgets)
library(shiny)
library(ggplot2)
library(dplyr)
library(data.table)
library(readr)
#setwd("~/Desktop/Spr2017-proj2-grp2")
setwd("../")
# set group based on radio selection
group1 = "<span style='color: #7f0000; font-size: 11pt'><strong>count</strong></span>"
group2 = "<span style='color: #7f0000; font-size: 11pt'><strong>FPD</strong></span>"
group3 = "<span style='color: #7f0000; font-size: 11pt'><strong>Percentage Cash Paying:</strong></span>"
# set color scheme
color = list(color1 = c('#F2D7D5', '#CD6155', '#C0392B','#641E16'),
color2 = c('#e6f5ff','#abdcff', '#70c4ff', '#0087e6', '#005998','#00365d','#1B4F72'),
color3 = c("#F7FCF5","#74C476", "#005A32"))
# set bin sizes and make legend in the bottom right
bin = list(bin1 = c(0,100,1000,10000,100000), bin2 = c(0,1,2,3,4,5))
label = list(label1 = c("<100","100-1000","1000~10,000","10,000~100,000"),
label2 = c("0-1","2-3","3-4","4-5","5-6","6","7+"),
label3 = c("<0.4","0.4~0.6",">0.6"))
title = list(t1 = "Pick Up Numbers", t2 = "Fair Per Distance",t3  = "PercentagePayingCash")
# load shape data
load('output/myShape1.RData')
subdat<-spTransform(myShape1, CRS("+init=epsg:4326"))
getwd()
setwd("Spring2019-Proj2-grp11")
runApp('app')
setwd("~/Documents/GitHub/Spring2019-Proj2-grp11/app")
setwd("~/Documents/GitHub/Spring2019-Proj2-grp11")
runApp('app')
