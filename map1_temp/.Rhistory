Nig
nog
rig
rod
r
r <- 4
print rapply
print r
r
r[0]
r[1]
r <- 3
knitr::opts_chunk$set(echo = TRUE)
library(tm)
install.packages(c("tm", "tidytext", "tidyverse", "DT"))
library(tm)
library(tidytext)
library(tidyverse)
library(DT)
urlfile<-'https://raw.githubusercontent.com/rit-public/HappyDB/master/happydb/data/cleaned_hm.csv'
hm_data <- read_csv(urlfile)
corpus <- VCorpus(VectorSource(hm_data$cleaned_hm))%>%
tm_map(content_transformer(tolower))%>%
tm_map(removePunctuation)%>%
tm_map(removeNumbers)%>%
tm_map(removeWords, character(0))%>%
tm_map(stripWhitespace)
stemmed <- tm_map(corpus, stemDocument) %>%
tidy() %>%
select(text)
dict <- tidy(corpus) %>%
select(text) %>%
unnest_tokens(dictionary, text)
data("stop_words")
word <- c("happy","ago","yesterday","lot","today","months","month",
"happier","happiest","last","week","past")
stop_words <- stop_words %>%
bind_rows(mutate(tibble(word), lexicon = "updated"))
completed <- stemmed %>%
mutate(id = row_number()) %>%
unnest_tokens(stems, text) %>%
bind_cols(dict) %>%
anti_join(stop_words, by = c("dictionary" = "word"))
completed <- completed %>%
group_by(stems) %>%
count(dictionary) %>%
mutate(word = dictionary[which.max(n)]) %>%
ungroup() %>%
select(stems, word) %>%
distinct() %>%
right_join(completed) %>%
select(-stems)
completed <- completed %>%
group_by(id) %>%
summarise(text = str_c(word, collapse = " ")) %>%
ungroup()
hm_data <- hm_data %>%
mutate(id = row_number()) %>%
inner_join(completed)
datatable(hm_data)
write_csv(hm_data, "../output/processed_moments.csv")
runApp(getwd())
install.packages("shiny")
shiny::runApp('Downloads/wk4-Shiny_tutorial')
runApp('Downloads/wk4-Shiny_tutorial')
runApp('Downloads/wk4-Shiny_tutorial')
shiny::runApp('Documents/GitHub/Spr2017-proj2-grp2/app')
install.packages(leaflet)
install.packages("leaflet")
runApp('Documents/GitHub/Spr2017-proj2-grp2/app')
runApp('Documents/GitHub/Spr2017-proj2-grp2/app')
runApp('Documents/GitHub/Spr2017-proj2-grp2/app')
runApp('Documents/GitHub/Spr2017-proj2-grp2/app')
runApp('Documents/GitHub/Spr2017-proj2-grp2/app')
shiny::runApp('Documents/GitHub/Spring2019-Proj2-grp11/app')
runApp('Documents/GitHub/Spring2019-Proj2-grp11/app')
runApp('Documents/GitHub/Spring2019-Proj2-grp11/app')
runApp('Documents/GitHub/Spring2019-Proj2-grp11/app')
?frame_data
?frame
runApp('Documents/GitHub/Spring2019-Proj2-grp11/app')
runApp('Documents/GitHub/Spring2019-Proj2-grp11/app')
runApp('Documents/GitHub/Spring2019-Proj2-grp11/app')
count_seperated.RData
runApp('Documents/GitHub/Spring2019-Proj2-grp11/app')
packages.used=c("rgeos", "sp", "rgdal",
"leaflet", "htmlwidgets", "shiny",
"ggplot2", "dplyr", "data.table","DT", "readr")
runApp('Documents/GitHub/Spring2019-Proj2-grp11/app')
install.packages("readr")
runApp('Documents/GitHub/Spring2019-Proj2-grp11/app')
runApp('Documents/GitHub/Spring2019-Proj2-grp11/app')
runApp('Documents/GitHub/Spring2019-Proj2-grp11/app')
runApp('Documents/GitHub/Spring2019-Proj2-grp11/app')
runApp('Documents/GitHub/Spring2019-Proj2-grp11/app')
runApp('Documents/GitHub/Spring2019-Proj2-grp11/app')
runApp('Documents/GitHub/Spring2019-Proj2-grp11/app')
runApp('Documents/GitHub/Spring2019-Proj2-grp11/app')
runApp('Documents/GitHub/Spring2019-Proj2-grp11/app')
runApp('Documents/GitHub/Spring2019-Proj2-grp11/app')
runApp('Documents/GitHub/Spring2019-Proj2-grp11/app')
runApp('Documents/GitHub/Spring2019-Proj2-grp11/app')
runApp('Documents/GitHub/Spring2019-Proj2-grp11/app')
runApp('Documents/GitHub/Spring2019-Proj2-grp11/app')
shiny::runApp('Documents/GitHub/Spring2019-Proj2-grp11/lib/panel2 demo')
runApp('Documents/GitHub/Spring2019-Proj2-grp11/lib/panel2 demo update')
runApp('Documents/GitHub/Spring2019-Proj2-grp11/map1_temp')
runApp('Documents/GitHub/Spring2019-Proj2-grp11/map1_temp')
install.packages("tigris")
runApp('Documents/GitHub/Spring2019-Proj2-grp11/map1_temp')
runApp('Documents/GitHub/Spring2019-Proj2-grp11/map1_temp')
